name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - closed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  pull-requests: write
  checks: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy-${{ github.event_name == 'pull_request' && github.event.pull_request.number || 'main' }}"
  cancel-in-progress: false

jobs:
  test:
    name: Test and Lint
    if: github.event.action != 'closed'
    uses: ./.github/workflows/test.yaml

  cleanup-pr-resources:
    name: Cleanup PR Resources
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Delete PR Cloud Functions
      run: |
        PR_NUM="${{ github.event.pull_request.number }}"
        API_FN_NAME="${{ env.API_FUNCTION_NAME }}-pr-${PR_NUM}"
        WORKER_FN_NAME="${{ env.WORKER_FUNCTION_NAME }}-pr-${PR_NUM}"
        MERGER_FN_NAME="${{ env.MERGER_FUNCTION_NAME }}-pr-${PR_NUM}"

        echo "Cleaning up PR #${PR_NUM} resources..."

        # Delete API function
        if gcloud functions describe "$API_FN_NAME" --region="${{ env.GCP_REGION }}" >/dev/null 2>&1; then
          echo "Deleting API function: $API_FN_NAME"
          gcloud functions delete "$API_FN_NAME" --region="${{ env.GCP_REGION }}" --quiet
        else
          echo "API function $API_FN_NAME not found, skipping"
        fi

        # Delete Worker function
        if gcloud functions describe "$WORKER_FN_NAME" --region="${{ env.GCP_REGION }}" >/dev/null 2>&1; then
          echo "Deleting Worker function: $WORKER_FN_NAME"
          gcloud functions delete "$WORKER_FN_NAME" --region="${{ env.GCP_REGION }}" --quiet
        else
          echo "Worker function $WORKER_FN_NAME not found, skipping"
        fi

        # Delete Merger function
        if gcloud functions describe "$MERGER_FN_NAME" --region="${{ env.GCP_REGION }}" >/dev/null 2>&1; then
          echo "Deleting Merger function: $MERGER_FN_NAME"
          gcloud functions delete "$MERGER_FN_NAME" --region="${{ env.GCP_REGION }}" --quiet
        else
          echo "Merger function $MERGER_FN_NAME not found, skipping"
        fi

    - name: Delete PR Pub/Sub topic
      run: |
        PR_NUM="${{ github.event.pull_request.number }}"
        TOPIC_NAME="${{ env.PUBSUB_TOPIC }}-pr-${PR_NUM}"

        if gcloud pubsub topics describe "$TOPIC_NAME" --project="${{ env.GCP_PROJECT_ID }}" >/dev/null 2>&1; then
          echo "Deleting Pub/Sub topic: $TOPIC_NAME"
          gcloud pubsub topics delete "$TOPIC_NAME" --project="${{ env.GCP_PROJECT_ID }}" --quiet
        else
          echo "Pub/Sub topic $TOPIC_NAME not found, skipping"
        fi

  deploy-infrastructure:
    name: Deploy GCS Infrastructure
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Override environment variables for PR environment
      if: github.event_name == 'pull_request'
      run: |
        PR_NUM="${{ github.event.pull_request.number }}"
        echo "Setting up PR-specific environment variables for PR #${PR_NUM}"

        # Override environment variables for PR environment
        echo "PUBSUB_TOPIC=${{ env.PUBSUB_TOPIC }}-pr-${PR_NUM}" >> $GITHUB_ENV

        echo "PR environment variables set:"
        echo "- PUBSUB_TOPIC: ${{ env.PUBSUB_TOPIC }}-pr-${PR_NUM}"

    - name: Create Pub/Sub topic
      run: |
        echo "Creating Pub/Sub topic ${PUBSUB_TOPIC}…"
        gcloud pubsub topics create "${PUBSUB_TOPIC}" \
          --project="${{ env.GCP_PROJECT_ID }}" || echo "Topic may already exist, continuing…"

  deploy-api:
    name: Deploy API
    needs: [test, deploy-infrastructure]
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Compute function name
      id: fn-name
      run: |
        BASE_FN=${{ env.API_FUNCTION_NAME }}
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "name=${BASE_FN}-pr-${{ github.event.pull_request.number }}" >>"$GITHUB_OUTPUT"
        else
          echo "name=${BASE_FN}" >>"$GITHUB_OUTPUT"
        fi

    - name: Copy common directory to api
      run: |
        echo "Copying common directory to api for deployment..."
        cp -r common api/
        ls -la api/

    - name: Generate requirements.txt
      run: |
        uv export --no-emit-project --format requirements-txt > api/requirements.txt
        cat api/requirements.txt

    - name: Deploy to Cloud Functions
      id: deploy
      run: |
        API_FN_NAME="${{ steps.fn-name.outputs.name }}"
        gcloud functions deploy "$API_FN_NAME" \
          --gen2 \
          --region=${{ env.GCP_REGION }} \
          --runtime=python312 \
          --trigger-http \
          --source=api \
          --entry-point=main \
          --allow-unauthenticated \
          --set-env-vars=GOOGLE_CLOUD_PROJECT=${{ env.GCP_PROJECT_ID }} \
          --set-env-vars=GCP_REGION=${{ env.GCP_REGION }} \
          --set-env-vars=PUBSUB_TOPIC=${{ github.event_name == 'pull_request' && format('{0}-pr-{1}', env.PUBSUB_TOPIC, github.event.pull_request.number) || env.PUBSUB_TOPIC }} \
          --set-env-vars=FIRESTORE_COLLECTION=${{ env.FIRESTORE_COLLECTION }} \
          --set-env-vars=GCS_CDN_BUCKET=${{ env.GCS_CDN_BUCKET }} \
          --set-env-vars=JOB_TTL_DAYS=3 \
          --set-env-vars=OTEL_SERVICE_NAME=$API_FN_NAME \
          --set-env-vars=LOG_LEVEL=info

        # Output the function URL for PR comments
        FUNCTION_URL=$(gcloud functions describe "${{ steps.fn-name.outputs.name }}" --region="${{ env.GCP_REGION }}" --format="value(serviceConfig.uri)")
        echo "function_url=$FUNCTION_URL" >> "$GITHUB_OUTPUT"

    - name: Update PR preview status
      if: github.event_name == 'pull_request'
      uses: ./.github/actions/update-pr-comment
      with:
        component: 'API'
        url: ${{ steps.deploy.outputs.function_url }}

  deploy-generator:
    name: Deploy Generator
    needs: [test, deploy-infrastructure]
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Compute function name
      id: fn-name
      run: |
        BASE_FN=${{ env.WORKER_FUNCTION_NAME }}
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "name=${BASE_FN}-pr-${{ github.event.pull_request.number }}" >>"$GITHUB_OUTPUT"
        else
          echo "name=${BASE_FN}" >>"$GITHUB_OUTPUT"
        fi

    - name: Copy common directory to generator
      run: |
        echo "Copying common directory to generator for deployment..."
        cp -r common generator/
        ls -la generator/

    - name: Generate requirements.txt
      run: |
        uv export --no-emit-project --format requirements-txt > generator/requirements.txt
        cat generator/requirements.txt

    - name: Deploy to Cloud Functions
      id: deploy
      run: |
        WORKER_FN_NAME="${{ steps.fn-name.outputs.name }}"
        gcloud functions deploy "$WORKER_FN_NAME" \
          --gen2 \
          --region="${{ env.GCP_REGION }}" \
          --runtime=python312 \
          --trigger-topic="${{ github.event_name == 'pull_request' && format('{0}-pr-{1}', env.PUBSUB_TOPIC, github.event.pull_request.number) || env.PUBSUB_TOPIC }}" \
          --source=generator \
          --entry-point=main \
          --memory=4Gi \
          --cpu=2 \
          --allow-unauthenticated \
          --set-env-vars=GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} \
          --set-env-vars=GOOGLE_CLOUD_PROJECT=${{ env.GCP_PROJECT_ID }} \
          --set-env-vars=FIRESTORE_COLLECTION=${{ env.FIRESTORE_COLLECTION }} \
          --set-env-vars=GCS_CDN_BUCKET=${{ env.GCS_CDN_BUCKET }} \
          --set-env-vars=GCS_WORKER_CACHE_BUCKET=${{ env.GCS_WORKER_CACHE_BUCKET }} \
          --set-env-vars=GCP_REGION=${{ env.GCP_REGION }} \
          --set-env-vars=GENERATOR_ADD_PAGE_NUMBERS=${{ env.GENERATOR_ADD_PAGE_NUMBERS }} \
          --set-env-vars=OTEL_SERVICE_NAME=$WORKER_FN_NAME \
          --set-env-vars=LOG_LEVEL=info

    - name: Update PR preview status
      if: github.event_name == 'pull_request'
      uses: ./.github/actions/update-pr-comment
      with:
        component: 'Generator Worker'
        function_name: ${{ steps.fn-name.outputs.name }}

  deploy-merger:
    name: Deploy Merger
    needs: [test, deploy-infrastructure]
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Compute function name
      id: fn-name
      run: |
        BASE_FN=${{ env.MERGER_FUNCTION_NAME }}
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "name=${BASE_FN}-pr-${{ github.event.pull_request.number }}" >>"$GITHUB_OUTPUT"
        else
          echo "name=${BASE_FN}" >>"$GITHUB_OUTPUT"
        fi

    - name: Copy common directory to merger
      run: |
        echo "Copying common directory to merger for deployment..."
        cp -r common merger/
        ls -la merger/

    - name: Generate requirements.txt
      run: |
        uv export --no-emit-project --format requirements-txt > merger/requirements.txt
        cat merger/requirements.txt

    - name: Deploy to Cloud Functions
      id: deploy
      run: |
        MERGER_FN_NAME="${{ steps.fn-name.outputs.name }}"
        gcloud functions deploy "$MERGER_FN_NAME" \
          --gen2 \
          --region="${{ env.GCP_REGION }}" \
          --runtime=python312 \
          --trigger-http \
          --source=merger \
          --entry-point=main \
          --memory=2Gi \
          --cpu=1 \
          --allow-unauthenticated \
          --set-env-vars=GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} \
          --set-env-vars=GOOGLE_CLOUD_PROJECT=${{ env.GCP_PROJECT_ID }} \
          --set-env-vars=GCS_WORKER_CACHE_BUCKET=${{ env.GCS_WORKER_CACHE_BUCKET }} \
          --set-env-vars=OTEL_SERVICE_NAME=$MERGER_FN_NAME \
          --set-env-vars=LOG_LEVEL=info

        # Output the function URL for PR comments
        FUNCTION_URL=$(gcloud functions describe "$MERGER_FN_NAME" --region="${{ env.GCP_REGION }}" --format="value(serviceConfig.uri)")
        echo "function_url=$FUNCTION_URL" >> "$GITHUB_OUTPUT"

    - name: Update PR preview status
      if: github.event_name == 'pull_request'
      uses: ./.github/actions/update-pr-comment
      with:
        component: 'Merger'
        url: ${{ steps.deploy.outputs.function_url }}

  deploy-ui:
    name: Deploy UI
    needs: test
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v5

      - name: Upload artifact (main branch only)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ui

      - name: Deploy to GitHub Pages (main branch only)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deploy PR Preview (PRs only)
        if: github.event_name == 'pull_request'
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ui

      - name: Update PR preview status
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/update-pr-comment
        with:
          component: 'UI'
          url: 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.pull_request.number }}/'
