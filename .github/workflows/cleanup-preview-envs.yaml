name: Scheduled Preview Environment Cleanup

on:
  schedule:
    # Run every hour to check for old preview environments
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      max_age_hours:
        description: 'Maximum age in hours for preview environments'
        required: false
        default: '24'
        type: string

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  cleanup-old-preview-environments:
    name: Cleanup Old Preview Environments
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Find old preview environments
      id: find-old-envs
      run: |
        MAX_AGE_HOURS="${{ github.event.inputs.max_age_hours || '24' }}"
        CUTOFF_TIMESTAMP=$(date -d "${MAX_AGE_HOURS} hours ago" -u +"%Y-%m-%dT%H:%M:%SZ")

        echo "Looking for preview environments older than ${MAX_AGE_HOURS} hours (before ${CUTOFF_TIMESTAMP})"

        # Find Cloud Functions with pr- prefix older than cutoff
        OLD_FUNCTIONS=$(gcloud functions list \
          --region="${{ env.GCP_REGION }}" \
          --format="value(name)" \
          --filter="name~'-pr-[0-9]+$' AND updateTime<'${CUTOFF_TIMESTAMP}'" || echo "")

        # Find GCS buckets with pr- suffix older than cutoff
        OLD_BUCKETS=$(gsutil ls -L -b gs://* | \
          awk '/^gs:\/\/.*-pr-[0-9]+\/$/{bucket=$1} /Time created:/{if(match($0, /[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z/)) {created=substr($0, RSTART, RLENGTH); if(created < "'${CUTOFF_TIMESTAMP}'") print bucket}}' | \
          sed 's|gs://||g' | sed 's|/$||g' || echo "")

        # Extract PR numbers from old resources
        PR_NUMBERS=""
        if [ -n "$OLD_FUNCTIONS" ]; then
          FUNCTION_PRS=$(echo "$OLD_FUNCTIONS" | grep -o 'pr-[0-9]\+' | sed 's/pr-//' | sort -u || echo "")
          PR_NUMBERS="${PR_NUMBERS} ${FUNCTION_PRS}"
        fi
        if [ -n "$OLD_BUCKETS" ]; then
          BUCKET_PRS=$(echo "$OLD_BUCKETS" | grep -o 'pr-[0-9]\+' | sed 's/pr-//' | sort -u || echo "")
          PR_NUMBERS="${PR_NUMBERS} ${BUCKET_PRS}"
        fi

        # Remove duplicates and spaces
        PR_NUMBERS=$(echo $PR_NUMBERS | tr ' ' '\n' | grep -v '^$' | sort -u | tr '\n' ' ' | sed 's/ $//')

        echo "Found old preview environments for PRs: ${PR_NUMBERS}"
        echo "pr_numbers=${PR_NUMBERS}" >> "$GITHUB_OUTPUT"

        # Save individual values for matrix
        if [ -n "$PR_NUMBERS" ]; then
          echo "$PR_NUMBERS" | tr ' ' '\n' > pr_list.txt
          PR_MATRIX=$(echo "$PR_NUMBERS" | tr ' ' '\n' | jq -R . | jq -s .)
          echo "pr_matrix=${PR_MATRIX}" >> "$GITHUB_OUTPUT"
        else
          echo "pr_matrix=[]" >> "$GITHUB_OUTPUT"
        fi

    - name: Upload PR list
      if: steps.find-old-envs.outputs.pr_numbers != ''
      uses: actions/upload-artifact@v4
      with:
        name: pr-list
        path: pr_list.txt
        retention-days: 1

  cleanup-specific-pr:
    name: Cleanup PR Environment
    needs: cleanup-old-preview-environments
    if: needs.cleanup-old-preview-environments.outputs.pr_matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pr_number: ${{ fromJson(needs.cleanup-old-preview-environments.outputs.pr_matrix) }}
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GCP and dependencies
      uses: ./.github/actions/setup-gcp-deps
      with:
        gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
        gcp_project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Check if PR is still open
      id: check-pr
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ matrix.pr_number }}
            });

            if (pr.data.state === 'open') {
              core.setOutput('is_open', 'true');
              core.setOutput('pr_title', pr.data.title);
              core.setOutput('pr_user', pr.data.user.login);
            } else {
              core.setOutput('is_open', 'false');
            }
          } catch (error) {
            if (error.status === 404) {
              console.log('PR not found, likely deleted');
              core.setOutput('is_open', 'false');
            } else {
              throw error;
            }
          }

    - name: Clean up PR resources
      run: |
        PR_NUM="${{ matrix.pr_number }}"
        ENVIRONMENT_SUFFIX="-pr-${PR_NUM}"

        echo "Cleaning up old preview environment resources for PR #${PR_NUM}..."

        # Delete Cloud Functions
        for FUNCTION_BASE in "${{ env.API_FUNCTION_NAME }}" "${{ env.WORKER_FUNCTION_NAME }}" "${{ env.MERGER_FUNCTION_NAME }}"; do
          FUNCTION_NAME="${FUNCTION_BASE}-pr-${PR_NUM}"
          if gcloud functions describe "$FUNCTION_NAME" --region="${{ env.GCP_REGION }}" >/dev/null 2>&1; then
            echo "Deleting function: $FUNCTION_NAME"
            gcloud functions delete "$FUNCTION_NAME" --region="${{ env.GCP_REGION }}" --quiet || echo "Failed to delete $FUNCTION_NAME"
          fi
        done

        # Use our cleanup script for infrastructure
        chmod +x ./cleanup-preview-resources.sh
        ./cleanup-preview-resources.sh "${ENVIRONMENT_SUFFIX}" || echo "Cleanup script failed for ${ENVIRONMENT_SUFFIX}"

    - name: Comment on open PR about cleanup
      if: steps.check-pr.outputs.is_open == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ matrix.pr_number }};
          const comment = `⏰ **Scheduled Preview Environment Cleanup**

          Your preview environment resources for PR #${prNumber} have been automatically cleaned up after 24 hours to save costs.

          **Resources cleaned up:**
          - ✅ Cloud Functions deleted
          - ✅ Pub/Sub topics deleted
          - ✅ GCS buckets deleted
          - ✅ Firestore collection documents deleted

          **To redeploy your preview environment:** Simply push a new commit or re-trigger the deployment workflow.`;

          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

outputs:
  cleaned_pr_count:
    description: "Number of PR environments cleaned up"
    value: ${{ fromJson(needs.cleanup-old-preview-environments.outputs.pr_matrix) && fromJson(needs.cleanup-old-preview-environments.outputs.pr_matrix).length || 0 }}
