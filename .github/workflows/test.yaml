name: Test and Lint

on:
  workflow_call:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Run tests with coverage
      run: |
        uv run pytest \
          --junitxml=pytest-results.xml \
          --cov=. \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          pytest-results.xml
          coverage.xml
          htmlcov/

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: pytest
        path: pytest-results.xml
        reporter: java-junit

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Run pre-commit hooks
      run: uvx --from 'pre-commit<5' pre-commit run --all-files --verbose
