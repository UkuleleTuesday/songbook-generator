name: Deploy GCS Infrastructure

on:
  workflow_dispatch:
    inputs:
      force_recreate:
        description: 'Force recreate resources (use with caution)'
        required: false
        type: boolean
        default: false
      pr_number:
        description: 'PR number for preview environment (optional)'
        required: false
        type: string

permissions:
  contents: read

jobs:
  deploy-infrastructure:
    name: Deploy GCS Infrastructure
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Load environment variables
      uses: falti/dotenv-action@v1.1.4
      with:
        path: .env
        export-variables: true
        keys-case: bypass

    - name: Override environment variables for PR environment
      if: github.event.inputs.pr_number != ''
      run: |
        PR_NUM="${{ github.event.inputs.pr_number }}"
        echo "Setting up PR-specific environment variables for PR #${PR_NUM}"

        # Override environment variables for PR environment
        echo "PUBSUB_TOPIC=${{ env.PUBSUB_TOPIC }}-pr-${PR_NUM}" >> $GITHUB_ENV
        echo "GCS_CDN_BUCKET=${{ env.GCS_CDN_BUCKET }}-pr-${PR_NUM}" >> $GITHUB_ENV
        echo "GCS_WORKER_CACHE_BUCKET=${{ env.GCS_WORKER_CACHE_BUCKET }}-pr-${PR_NUM}" >> $GITHUB_ENV
        echo "FIRESTORE_COLLECTION=${{ env.FIRESTORE_COLLECTION }}" >> $GITHUB_ENV
        echo "API_FUNCTION_NAME=${{ env.API_FUNCTION_NAME }}-pr-${PR_NUM}" >> $GITHUB_ENV
        echo "WORKER_FUNCTION_NAME=${{ env.WORKER_FUNCTION_NAME }}-pr-${PR_NUM}" >> $GITHUB_ENV

        # Keep other variables the same
        echo "GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}" >> $GITHUB_ENV
        echo "GCP_REGION=${{ env.GCP_REGION }}" >> $GITHUB_ENV
        echo "SA=${{ env.SA }}" >> $GITHUB_ENV

        echo "PR environment variables set:"
        echo "- PUBSUB_TOPIC: ${{ env.PUBSUB_TOPIC }}-pr-${PR_NUM}"
        echo "- GCS_CDN_BUCKET: ${{ env.GCS_CDN_BUCKET }}-pr-${PR_NUM}"
        echo "- GCS_WORKER_CACHE_BUCKET: ${{ env.GCS_WORKER_CACHE_BUCKET }}-pr-${PR_NUM}"

    - name: Auth Cloud SDK
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        export_environment_variables: true

    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        version: '431.0.0'

    - name: Make deploy script executable
      run: chmod +x ./deploy-gcs.sh

    - name: Run GCS deployment script
      run: ./deploy-gcs.sh
      env:
        FORCE_RECREATE: ${{ github.event.inputs.force_recreate }}

    - name: Deployment completed
      run: |
        echo "âœ… Infrastructure deployment completed successfully!"
        echo "The following resources have been set up:"
        echo "- Pub/Sub topic: ${{ env.PUBSUB_TOPIC }}"
        echo "- Firestore collection: ${{ env.FIRESTORE_COLLECTION }}"
        echo "- GCS CDN bucket: ${{ env.GCS_CDN_BUCKET }}"
        echo "- GCS worker cache bucket: ${{ env.GCS_WORKER_CACHE_BUCKET }}"

        if [[ -n "${{ github.event.inputs.pr_number }}" ]]; then
          echo ""
          echo "ðŸ”§ PR-specific resources created for PR #${{ github.event.inputs.pr_number }}"
          echo "These resources will need to be cleaned up when the PR is closed."
        fi
